{"version":3,"sources":["Components/Filter/Filter.module.css","hooks/useLocalStorage.js","redux/phonebook/contacts-types.js","redux/phonebook/contacts-actions.js","Components/ContactForm/ContactForm.js","Components/ContactList/ContactList.js","Components/Filter/Filter.js","App.js","redux/phonebook/contacts-reducer.js","redux/store.js","index.js","Components/ContactForm/ContactForm.module.css","Components/ContactList/ContactList.module.css"],"names":["module","exports","useLocalStorage","key","defaultValue","useState","JSON","parse","window","localStorage","getItem","state","setState","useEffect","setItem","stringify","contactsTypes","ADD","DELETE","CHANGE_FILTER","contactsActions","addContact","name","number","type","ContactTypes","payload","id","shortid","generate","deleteContact","contactId","changeFilter","value","connect","dispatch","onAddContact","setName","setNumber","handleChange","event","target","className","styles","form","label","pattern","title","input","onChange","required","btn","onClick","preventDefault","contacts","items","filter","onDeleteContact","list","contact","toLowerCase","includes","map","item","e","App","totalContacts","setTotalContacts","length","defaultProps","totalContactsCount","visibleContacts","initialContacts","combineReducers","ContactsTypes","isInContacts","some","alert","renewableState","filtredState","rootReducer","contactsReducer","store","createStore","composeWithDevTools","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.62d21d6e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__2MXx_\",\"btn\":\"Filter_btn__1xbVw\"};","import { useState, useEffect } from \"react\";\r\n\r\nexport default function useLocalStorage(key, defaultValue)\r\n{\r\n    const [state, setState] = useState(()=>{\r\n        return JSON.parse(window.localStorage.getItem(key)) ?? defaultValue;\r\n    });\r\n\r\n    useEffect(()=>{\r\n        window.localStorage.setItem(key, JSON.stringify(state));\r\n    }, [key, state]);\r\n\r\n    return [state, setState];\r\n}","const ADD = 'contacts/add';\r\nconst DELETE = 'contacts/delete';\r\nconst CHANGE_FILTER = 'contscts/changeFilter';\r\nconst contactsTypes = {\r\n    ADD, \r\n    DELETE, \r\n    CHANGE_FILTER\r\n  };\r\n\r\nexport default contactsTypes;","import ContactTypes from './contacts-types';\r\nimport shortid from 'shortid';\r\n\r\nconst addContact = (name, number) => ({\r\n    type: ContactTypes.ADD,\r\n    payload: { \r\n        id: shortid.generate(),\r\n        name,\r\n        number,\r\n    }\r\n});\r\n\r\nconst deleteContact = contactId => ({\r\n    type: ContactTypes.DELETE,\r\n    payload: contactId,\r\n});\r\n\r\nconst changeFilter = value => ({\r\n    type: ContactTypes.CHANGE_FILTER,\r\n    payload: value,\r\n});\r\n\r\nconst contactsActions = {\r\n    addContact, \r\n    deleteContact, \r\n    changeFilter\r\n  };\r\n\r\nexport default contactsActions;","// import React, { useState } from 'react';\r\nimport useLocalStorage from '../../hooks/useLocalStorage';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport contactsActions from '../../redux/phonebook/contacts-actions';\r\nimport styles from './ContactForm.module.css';\r\n\r\nfunction ContactForm({ onAddContact }) {\r\n    const [name, setName] = useLocalStorage('name', '');\r\n    const [number, setNumber] = useLocalStorage('number', '');  \r\n\r\n    const handleChange = event => {\r\n        const { name, value } = event.target;\r\n        switch (name) {\r\n            case 'name':\r\n                setName(value);\r\n                break;\r\n            case 'number':\r\n                setNumber(value);\r\n                break;\r\n            default:\r\n                return;\r\n        }\r\n    };\r\n\r\n    const handleSubmit = event => {\r\n        event.preventDefault();\r\n        onAddContact(name, number);\r\n        setName('');\r\n        setNumber('');\r\n    }\r\n\r\n    return(\r\n        <form className={styles.form} >\r\n            <label className={styles.label}>Name: \r\n                <input type=\"text\" name=\"name\" pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\" title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\" \r\n                className={styles.input}\r\n                value={name}\r\n                onChange={handleChange}\r\n                required />\r\n            </label>\r\n            <label className={styles.label}>Number: \r\n                <input type=\"tel\" name=\"number\"\r\n                pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\" \r\n                className={styles.input} value={number} onChange={handleChange} required />\r\n            </label>\r\n            <button type=\"button\" \r\n            className={styles.btn} onClick={handleSubmit}>\r\n                Add contact\r\n            </button>\r\n        </form>\r\n    )\r\n}\r\nContactForm.propTypes = {\r\n    name: PropTypes.string,\r\n    number: PropTypes.number,\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    onAddContact: (name, number) => dispatch(contactsActions.addContact(name, number)),\r\n})\r\n\r\nexport default connect(null, mapDispatchToProps)(ContactForm);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport contactsActions from '../../redux/phonebook/contacts-actions';\r\nimport styles from './ContactList.module.css';\r\n\r\nconst ContactList = ({ contacts, filter, onDeleteContact }) => (\r\n    <ul className={styles.list}>\r\n        {contacts.filter(contact => contact.name.toLowerCase().includes(filter.toLowerCase())).map( ({ id, name, number }) => (\r\n            <li key={id} className={styles.item}>\r\n                <p className={styles.name}>{name}: <span>{number}</span></p>\r\n                <button type=\"button\" className={styles.btn} onClick={()=> onDeleteContact(id)}>Delete</button>\r\n            </li>\r\n        ) )\r\n        }\r\n    </ul>\r\n);\r\nContactList.propTypes = {\r\n    id: PropTypes.any,\r\n    name: PropTypes.string,\r\n    number: PropTypes.string,\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    onDeleteContact: (id) => dispatch(contactsActions.deleteContact(id)),\r\n});\r\nconst mapStateToProps = state => ({\r\n    contacts: state.contacts.items,\r\n    filter: state.contacts.filter,\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport contactsActions from '../../redux/phonebook/contacts-actions';\r\nimport styles from './Filter.module.css';\r\n\r\nconst Filter = ({ value, onChange }) => (\r\n    <label className={styles.label}>\r\n        Find contacts by name\r\n        <input className={styles.input} type=\"text\" value={value} onChange={onChange}/>\r\n    </label>\r\n);\r\nFilter.propTypes = {\r\n    value: PropTypes.string,\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    onChange: e => dispatch(contactsActions.changeFilter(e.target.value)),\r\n});\r\nconst mapStateToProps = state => ({\r\n    value: state.filter,\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './App.css';\r\nimport { connect } from 'react-redux';\r\nimport ContactForm from './Components/ContactForm';\r\nimport ContactList from './Components/ContactList';\r\nimport Filter from './Components/Filter';\r\n\r\nfunction App({ items }) {\r\n  const [totalContacts, setTotalContacts] = useState(0);\r\n\r\n  useEffect(() => {\r\n    setTotalContacts(items.length);\r\n  }, [items]);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Phonebook</h1>\r\n      <ContactForm />\r\n\r\n      <h2>Contacts (total: {totalContacts}) </h2>\r\n      <Filter />\r\n      <ContactList />\r\n    </div>        \r\n  ); \r\n}\r\nApp.defaultProps = {\r\n  totalContactsCount: null,\r\n  visibleContacts: null,\r\n}\r\nApp.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape(\r\n      {\r\n        id: PropTypes.any.isRequired,\r\n        name: PropTypes.string.isRequired,\r\n        number: PropTypes.string.isRequired,\r\n      })\r\n  ),\r\n  filter: PropTypes.string,\r\n  totalContactsCount: PropTypes.number,\r\n  visibleContacts: PropTypes.number,\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    items: state.contacts.items,\r\n    filter: state.contacts.filter,\r\n}};\r\n\r\nexport default connect(mapStateToProps)(App);\r\n","import { combineReducers } from \"redux\";\r\nimport ContactsTypes from './contacts-types';\r\n\r\nconst initialContacts = [\r\n    {id: 'id-1', name: 'Rosie Simpson', number: '459-12-56'},\r\n    {id: 'id-2', name: 'Hermione Kline', number: '443-89-12'},\r\n    {id: 'id-3', name: 'Eden Clements', number: '645-17-79'},\r\n    {id: 'id-4', name: 'Annie Copeland', number: '227-91-26'},\r\n  ]\r\n\r\nconst items = (state = (JSON.parse(window.localStorage.getItem('contacts')) ?? initialContacts), { type, payload }) => {\r\n    switch (type) {\r\n        case ContactsTypes.ADD:\r\n            const isInContacts = state.some(contact => contact.name === payload.name);\r\n            if (isInContacts) { \r\n                alert(`${payload.name} is already in contacts.`); return state;\r\n            }\r\n            const renewableState = [...state, payload];\r\n            window.localStorage.setItem('contacts', JSON.stringify(renewableState));             \r\n            return renewableState; \r\n       \r\n        case ContactsTypes.DELETE:\r\n            const filtredState = state.filter(contact => contact.id !== payload)\r\n            window.localStorage.setItem('contacts', JSON.stringify(filtredState));\r\n            return filtredState;\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nconst filter = (state = '', { type, payload }) => {\r\n    switch (type) {\r\n        case ContactsTypes.CHANGE_FILTER:                     \r\n            return payload; \r\n       \r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default combineReducers({ items, filter });","import { createStore, combineReducers } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport contactsReducer from './phonebook/contacts-reducer';\r\n\r\nconst rootReducer = combineReducers({\r\n    contacts: contactsReducer,\r\n});\r\nconst store = createStore(rootReducer, composeWithDevTools());\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport 'modern-normalize/modern-normalize.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__vKspi\",\"label\":\"ContactForm_label__2DohH\",\"input\":\"ContactForm_input__Sthp7\",\"btn\":\"ContactForm_btn__YbD5M\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__3QLo_\",\"item\":\"ContactList_item__1Zm5b\",\"name\":\"ContactList_name__3JdAg\",\"btn\":\"ContactList_btn__LhST-\"};"],"sourceRoot":""}